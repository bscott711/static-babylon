"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[568],{47575:function(e,t,s){s.d(t,{Kj:function(){return O},gW:function(){return B}});var i=s(18139),n=s(88658),r=s(42827),a=s(94104),o=s(40140),h=s(50147),l=s(25412),c=s(42922),d=s(56387),u=s(82186),f=s(12341),g=s(84106),_=s(95068),m=s(14735),I=s(18894),M=s(88058),p=s(5458),y=s(88137),D=s(30658),v=s(70646),b=s(59069),S=s(14559),x=s(11298);class B{}class A{constructor(){this.visibleInstances={},this.batchCache=new P,this.batchCacheReplacementModeInFrozenMode=new P,this.instancesBufferSize=2048}}class P{constructor(){this.mustReturn=!1,this.visibleInstances=new Array,this.renderSelf=new Array,this.hardwareInstancedRendering=new Array}}class w{constructor(){this.instancesCount=0,this.matrixBuffer=null,this.previousMatrixBuffer=null,this.matrixBufferSize=512,this.matrixData=null,this.boundingVectors=[],this.worldMatrices=null}}class C{constructor(){this._areNormalsFrozen=!1,this._source=null,this.meshMap=null,this._preActivateId=-1,this._LODLevels=new Array,this._useLODScreenCoverage=!1,this._effectiveMaterial=null,this._forcedInstanceCount=0}}class O extends _.x{constructor(e,t=null,s=null,n=null,o,h=!0){if(super(e,t),this._internalMeshDataInfo=new C,this.delayLoadState=0,this.instances=new Array,this._creationDataStorage=null,this._geometry=null,this._instanceDataStorage=new A,this._thinInstanceDataStorage=new w,this._shouldGenerateFlatShading=!1,this._originalBuilderSideOrientation=O.DEFAULTSIDE,this.overrideMaterialSideOrientation=null,this.ignoreCameraMaxZ=!1,t=this.getScene(),this._onBeforeDraw=(e,t,s)=>{e&&s&&(this._uniformBuffer?this.transferToEffect(t):s.bindOnlyWorldMatrix(t))},n){if(n._geometry&&n._geometry.applyToMesh(this),r.j.DeepCopy(n,this,["name","material","skeleton","instances","parent","uniqueId","source","metadata","morphTargetManager","hasInstances","worldMatrixInstancedBuffer","previousWorldMatrixInstancedBuffer","hasLODLevels","geometry","isBlocked","areNormalsFrozen","facetNb","isFacetDataEnabled","lightSources","useBones","isAnInstance","collider","edgesRenderer","forward","up","right","absolutePosition","absoluteScaling","absoluteRotationQuaternion","isWorldMatrixFrozen","nonUniformScaling","behaviors","worldMatrixFromCache","hasThinInstances","cloneMeshMap","hasBoundingInfo"],["_poseMatrix"]),this._internalMeshDataInfo._source=n,t.useClonedMeshMap&&(n._internalMeshDataInfo.meshMap||(n._internalMeshDataInfo.meshMap={}),n._internalMeshDataInfo.meshMap[this.uniqueId]=this),this._originalBuilderSideOrientation=n._originalBuilderSideOrientation,this._creationDataStorage=n._creationDataStorage,n._ranges){const e=n._ranges;for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&e[t]&&this.createAnimationRange(t,e[t].from,e[t].to)}if(n.metadata&&n.metadata.clone?this.metadata=n.metadata.clone():this.metadata=n.metadata,a.$&&a.$.HasTags(n)&&a.$.AddTagsTo(this,a.$.GetTags(n,!0)),this.setEnabled(n.isEnabled(!1)),this.parent=n.parent,this.setPivotMatrix(n.getPivotMatrix()),this.id=e+"."+n.id,this.material=n.material,!o){const t=n.getDescendants(!0);for(let s=0;s<t.length;s++){const i=t[s];i.clone&&i.clone(e+"."+i.name,this)}}if(n.morphTargetManager&&(this.morphTargetManager=n.morphTargetManager),t.getPhysicsEngine){const e=t.getPhysicsEngine();if(h&&e){const t=e.getImpostorForPhysicsObject(n);t&&(this.physicsImpostor=t.clone(this))}}for(let e=0;e<t.particleSystems.length;e++){const s=t.particleSystems[e];s.emitter===n&&s.clone(s.name,this)}this.skeleton=n.skeleton,this.refreshBoundingInfo(!0,!0),this.computeWorldMatrix(!0)}null!==s&&(this.parent=s),this._instanceDataStorage.hardwareInstancedRendering=this.getEngine().getCaps().instancedArrays,this._internalMeshDataInfo._onMeshReadyObserverAdded=e=>{e.unregisterOnNextCall=!0,this.isReady(!0)?this.onMeshReadyObservable.notifyObservers(this):this._internalMeshDataInfo._checkReadinessObserver||(this._internalMeshDataInfo._checkReadinessObserver=this._scene.onBeforeRenderObservable.add((()=>{this.isReady(!0)&&(this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),this._internalMeshDataInfo._checkReadinessObserver=null,this.onMeshReadyObservable.notifyObservers(this))})))},this.onMeshReadyObservable=new i.y$(this._internalMeshDataInfo._onMeshReadyObserverAdded),n&&n.onClonedObservable.notifyObservers(this)}static _GetDefaultSideOrientation(e){return e||O.FRONTSIDE}get useLODScreenCoverage(){return this._internalMeshDataInfo._useLODScreenCoverage}set useLODScreenCoverage(e){this._internalMeshDataInfo._useLODScreenCoverage=e}get computeBonesUsingShaders(){return this._internalAbstractMeshDataInfo._computeBonesUsingShaders}set computeBonesUsingShaders(e){this._internalAbstractMeshDataInfo._computeBonesUsingShaders!==e&&(e&&this._internalMeshDataInfo._sourcePositions&&(this.setVerticesData(u.o.PositionKind,this._internalMeshDataInfo._sourcePositions,!0),this._internalMeshDataInfo._sourceNormals&&this.setVerticesData(u.o.NormalKind,this._internalMeshDataInfo._sourceNormals,!0),this._internalMeshDataInfo._sourcePositions=null,this._internalMeshDataInfo._sourceNormals=null),this._internalAbstractMeshDataInfo._computeBonesUsingShaders=e,this._markSubMeshesAsAttributesDirty())}get onBeforeRenderObservable(){return this._internalMeshDataInfo._onBeforeRenderObservable||(this._internalMeshDataInfo._onBeforeRenderObservable=new i.y$),this._internalMeshDataInfo._onBeforeRenderObservable}get onBeforeBindObservable(){return this._internalMeshDataInfo._onBeforeBindObservable||(this._internalMeshDataInfo._onBeforeBindObservable=new i.y$),this._internalMeshDataInfo._onBeforeBindObservable}get onAfterRenderObservable(){return this._internalMeshDataInfo._onAfterRenderObservable||(this._internalMeshDataInfo._onAfterRenderObservable=new i.y$),this._internalMeshDataInfo._onAfterRenderObservable}get onBetweenPassObservable(){return this._internalMeshDataInfo._onBetweenPassObservable||(this._internalMeshDataInfo._onBetweenPassObservable=new i.y$),this._internalMeshDataInfo._onBetweenPassObservable}get onBeforeDrawObservable(){return this._internalMeshDataInfo._onBeforeDrawObservable||(this._internalMeshDataInfo._onBeforeDrawObservable=new i.y$),this._internalMeshDataInfo._onBeforeDrawObservable}set onBeforeDraw(e){this._onBeforeDrawObserver&&this.onBeforeDrawObservable.remove(this._onBeforeDrawObserver),this._onBeforeDrawObserver=this.onBeforeDrawObservable.add(e)}get hasInstances(){return this.instances.length>0}get hasThinInstances(){return(this._thinInstanceDataStorage.instancesCount??0)>0}get forcedInstanceCount(){return this._internalMeshDataInfo._forcedInstanceCount}set forcedInstanceCount(e){this._internalMeshDataInfo._forcedInstanceCount=e}get source(){return this._internalMeshDataInfo._source}get cloneMeshMap(){return this._internalMeshDataInfo.meshMap}get isUnIndexed(){return this._unIndexed}set isUnIndexed(e){this._unIndexed!==e&&(this._unIndexed=e,this._markSubMeshesAsAttributesDirty())}get worldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesData}get previousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.instancesPreviousData}get manualUpdateOfWorldMatrixInstancedBuffer(){return this._instanceDataStorage.manualUpdate}set manualUpdateOfWorldMatrixInstancedBuffer(e){this._instanceDataStorage.manualUpdate=e}get manualUpdateOfPreviousWorldMatrixInstancedBuffer(){return this._instanceDataStorage.previousManualUpdate}set manualUpdateOfPreviousWorldMatrixInstancedBuffer(e){this._instanceDataStorage.previousManualUpdate=e}instantiateHierarchy(e=null,t,s){const i=0===this.getTotalVertices()||t&&t.doNotInstantiate&&(!0===t.doNotInstantiate||t.doNotInstantiate(this))?this.clone("Clone of "+(this.name||this.id),e||this.parent,!0):this.createInstance("instance of "+(this.name||this.id));i.parent=e||this.parent,i.position=this.position.clone(),i.scaling=this.scaling.clone(),this.rotationQuaternion?i.rotationQuaternion=this.rotationQuaternion.clone():i.rotation=this.rotation.clone(),s&&s(this,i);for(const n of this.getChildTransformNodes(!0))"InstancedMesh"===n.getClassName()&&"Mesh"===i.getClassName()?n.instantiateHierarchy(i,{doNotInstantiate:t&&t.doNotInstantiate||!1,newSourcedMesh:i},s):n.instantiateHierarchy(i,t,s);return i}getClassName(){return"Mesh"}get _isMesh(){return!0}toString(e){let t=super.toString(e);if(t+=", n vertices: "+this.getTotalVertices(),t+=", parent: "+(this._waitingParentId?this._waitingParentId:this.parent?this.parent.name:"NONE"),this.animations)for(let s=0;s<this.animations.length;s++)t+=", animation[0]: "+this.animations[s].toString(e);if(e)if(this._geometry){const e=this.getIndices(),s=this.getVerticesData(u.o.PositionKind);s&&e&&(t+=", flat shading: "+(s.length/3===e.length?"YES":"NO"))}else t+=", flat shading: UNKNOWN";return t}_unBindEffect(){super._unBindEffect();for(const e of this.instances)e._unBindEffect()}get hasLODLevels(){return this._internalMeshDataInfo._LODLevels.length>0}getLODLevels(){return this._internalMeshDataInfo._LODLevels}_sortLODLevels(){const e=this._internalMeshDataInfo._useLODScreenCoverage?-1:1;this._internalMeshDataInfo._LODLevels.sort(((t,s)=>t.distanceOrScreenCoverage<s.distanceOrScreenCoverage?e:t.distanceOrScreenCoverage>s.distanceOrScreenCoverage?-e:0))}addLODLevel(e,t){if(t&&t._masterMesh)return D.Y.Warn("You cannot use a mesh as LOD level twice"),this;const s=new x.g(e,t);return this._internalMeshDataInfo._LODLevels.push(s),t&&(t._masterMesh=this),this._sortLODLevels(),this}getLODLevelAtDistance(e){const t=this._internalMeshDataInfo;for(let s=0;s<t._LODLevels.length;s++){const i=t._LODLevels[s];if(i.distanceOrScreenCoverage===e)return i.mesh}return null}removeLODLevel(e){const t=this._internalMeshDataInfo;for(let s=0;s<t._LODLevels.length;s++)t._LODLevels[s].mesh===e&&(t._LODLevels.splice(s,1),e&&(e._masterMesh=null));return this._sortLODLevels(),this}getLOD(e,t){const s=this._internalMeshDataInfo;if(!s._LODLevels||0===s._LODLevels.length)return this;let i;if(t)i=t;else{i=this.getBoundingInfo().boundingSphere}const n=i.centerWorld.subtract(e.globalPosition).length();let r=n,a=1;if(s._useLODScreenCoverage){const t=e.screenArea;let s=i.radiusWorld*e.minZ/n;s=s*s*Math.PI,r=s/t,a=-1}if(a*s._LODLevels[s._LODLevels.length-1].distanceOrScreenCoverage>a*r)return this.onLODLevelSelection&&this.onLODLevelSelection(r,this,this),this;for(let o=0;o<s._LODLevels.length;o++){const e=s._LODLevels[o];if(a*e.distanceOrScreenCoverage<a*r){if(e.mesh){if(4===e.mesh.delayLoadState)return e.mesh._checkDelayState(),this;if(2===e.mesh.delayLoadState)return this;e.mesh._preActivate(),e.mesh._updateSubMeshesBoundingInfo(this.worldMatrixFromCache)}return this.onLODLevelSelection&&this.onLODLevelSelection(r,this,e.mesh),e.mesh}}return this.onLODLevelSelection&&this.onLODLevelSelection(r,this,this),this}get geometry(){return this._geometry}getTotalVertices(){return null===this._geometry||void 0===this._geometry?0:this._geometry.getTotalVertices()}getVerticesData(e,t,s){if(!this._geometry)return null;let i=this._userInstancedBuffersStorage?.vertexBuffers[e]?.getFloatData(this._geometry.getTotalVertices(),s||t&&1!==this._geometry.meshes.length);return i||(i=this._geometry.getVerticesData(e,t,s)),i}getVertexBuffer(e){return this._geometry?this._userInstancedBuffersStorage?.vertexBuffers[e]??this._geometry.getVertexBuffer(e):null}isVerticesDataPresent(e){return this._geometry?void 0!==this._userInstancedBuffersStorage?.vertexBuffers[e]||this._geometry.isVerticesDataPresent(e):!!this._delayInfo&&-1!==this._delayInfo.indexOf(e)}isVertexBufferUpdatable(e){return this._geometry?this._userInstancedBuffersStorage?.vertexBuffers[e]?.isUpdatable()||this._geometry.isVertexBufferUpdatable(e):!!this._delayInfo&&-1!==this._delayInfo.indexOf(e)}getVerticesDataKinds(){if(!this._geometry){const e=new Array;return this._delayInfo&&this._delayInfo.forEach((function(t){e.push(t)})),e}const e=this._geometry.getVerticesDataKinds();if(this._userInstancedBuffersStorage)for(const t in this._userInstancedBuffersStorage.vertexBuffers)e.push(t);return e}getTotalIndices(){return this._geometry?this._geometry.getTotalIndices():0}getIndices(e,t){return this._geometry?this._geometry.getIndices(e,t):[]}get isBlocked(){return null!==this._masterMesh&&void 0!==this._masterMesh}isReady(e=!1,t=!1){if(2===this.delayLoadState)return!1;if(!super.isReady(e))return!1;if(!this.subMeshes||0===this.subMeshes.length)return!0;if(!e)return!0;const s=this.getEngine(),i=this.getScene(),n=t||s.getCaps().instancedArrays&&(this.instances.length>0||this.hasThinInstances);this.computeWorldMatrix();const r=this.material||i.defaultMaterial;if(r)if(r._storeEffectOnSubMeshes)for(const o of this.subMeshes){const e=o.getMaterial();if(e)if(e._storeEffectOnSubMeshes){if(!e.isReadyForSubMesh(this,o,n))return!1}else if(!e.isReady(this,n))return!1}else if(!r.isReady(this,n))return!1;const a=s.currentRenderPassId;for(const o of this.lightSources){const e=o.getShadowGenerator();if(e&&(!e.getShadowMap()?.renderList||e.getShadowMap()?.renderList&&-1!==e.getShadowMap()?.renderList?.indexOf(this))){e.getShadowMap()&&(s.currentRenderPassId=e.getShadowMap().renderPassId);for(const t of this.subMeshes)if(!e.isReady(t,n,t.getMaterial()?.needAlphaBlendingForMesh(this)??!1))return s.currentRenderPassId=a,!1;s.currentRenderPassId=a}}for(const o of this._internalMeshDataInfo._LODLevels)if(o.mesh&&!o.mesh.isReady(n))return!1;return!0}get areNormalsFrozen(){return this._internalMeshDataInfo._areNormalsFrozen}freezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!0,this}unfreezeNormals(){return this._internalMeshDataInfo._areNormalsFrozen=!1,this}set overridenInstanceCount(e){this._instanceDataStorage.overridenInstanceCount=e}_preActivate(){const e=this._internalMeshDataInfo,t=this.getScene().getRenderId();return e._preActivateId===t||(e._preActivateId=t,this._instanceDataStorage.visibleInstances=null),this}_preActivateForIntermediateRendering(e){return this._instanceDataStorage.visibleInstances&&(this._instanceDataStorage.visibleInstances.intermediateDefaultRenderId=e),this}_registerInstanceForRenderId(e,t){return this._instanceDataStorage.visibleInstances||(this._instanceDataStorage.visibleInstances={defaultRenderId:t,selfDefaultRenderId:this._renderId}),this._instanceDataStorage.visibleInstances[t]||(void 0!==this._instanceDataStorage.previousRenderId&&this._instanceDataStorage.isFrozen&&(this._instanceDataStorage.visibleInstances[this._instanceDataStorage.previousRenderId]=null),this._instanceDataStorage.previousRenderId=t,this._instanceDataStorage.visibleInstances[t]=new Array),this._instanceDataStorage.visibleInstances[t].push(e),this}_afterComputeWorldMatrix(){super._afterComputeWorldMatrix(),this.hasThinInstances&&(this.doNotSyncBoundingInfo||this.thinInstanceRefreshBoundingInfo(!1))}_postActivate(){this.edgesShareWithInstances&&this.edgesRenderer&&this.edgesRenderer.isEnabled&&this._renderingGroup&&(this._renderingGroup._edgesRenderers.pushNoDuplicate(this.edgesRenderer),this.edgesRenderer.customInstances.push(this.getWorldMatrix()))}refreshBoundingInfo(e=!1,t=!1){if(this.hasBoundingInfo&&this.getBoundingInfo().isLocked)return this;const s=this.geometry?this.geometry.boundingBias:null;return this._refreshBoundingInfo(this._getPositionData(e,t),s),this}_createGlobalSubMesh(e){const t=this.getTotalVertices();if(!t||!this.getIndices())return null;if(this.subMeshes&&this.subMeshes.length>0){const s=this.getIndices();if(!s)return null;const i=s.length;let n=!1;if(e)n=!0;else for(const e of this.subMeshes){if(e.indexStart+e.indexCount>i){n=!0;break}if(e.verticesStart+e.verticesCount>t){n=!0;break}}if(!n)return this.subMeshes[0]}return this.releaseSubMeshes(),new m.P(0,0,t,0,this.getTotalIndices(),this)}subdivide(e){if(e<1)return;const t=this.getTotalIndices();let s=t/e|0,i=0;for(;s%3!==0;)s++;this.releaseSubMeshes();for(let n=0;n<e&&!(i>=t);n++)m.P.CreateFromIndices(0,i,n===e-1?t-i:s,this),i+=s;this.synchronizeInstances()}setVerticesData(e,t,s=!1,i){if(this._geometry)this._geometry.setVerticesData(e,t,s,i);else{const i=new f.x;i.set(t,e);const n=this.getScene();new g.Z(g.Z.RandomId(),n,i,s,this)}return this}removeVerticesData(e){this._geometry&&this._geometry.removeVerticesData(e)}markVerticesDataAsUpdatable(e,t=!0){const s=this.getVertexBuffer(e);s&&s.isUpdatable()!==t&&this.setVerticesData(e,this.getVerticesData(e),t)}setVerticesBuffer(e,t=!0){return this._geometry||(this._geometry=g.Z.CreateGeometryForMesh(this)),this._geometry.setVerticesBuffer(e,null,t),this}updateVerticesData(e,t,s,i){return this._geometry?(i?(this.makeGeometryUnique(),this.updateVerticesData(e,t,s,!1)):this._geometry.updateVerticesData(e,t,s),this):this}updateMeshPositions(e,t=!0){const s=this.getVerticesData(u.o.PositionKind);if(!s)return this;if(e(s),this.updateVerticesData(u.o.PositionKind,s,!1,!1),t){const e=this.getIndices(),t=this.getVerticesData(u.o.NormalKind);if(!t)return this;f.x.ComputeNormals(s,e,t),this.updateVerticesData(u.o.NormalKind,t,!1,!1)}return this}makeGeometryUnique(){if(!this._geometry)return this;if(1===this._geometry.meshes.length)return this;const e=this._geometry,t=this._geometry.copy(g.Z.RandomId());return e.releaseForMesh(this,!0),t.applyToMesh(this),this}setIndices(e,t=null,s=!1){if(this._geometry)this._geometry.setIndices(e,t,s);else{const t=new f.x;t.indices=e;const i=this.getScene();new g.Z(g.Z.RandomId(),i,t,s,this)}return this}updateIndices(e,t,s=!1){return this._geometry?(this._geometry.updateIndices(e,t,s),this):this}toLeftHanded(){return this._geometry?(this._geometry.toLeftHanded(),this):this}_bind(e,t,s){if(!this._geometry)return this;const i=this.getScene().getEngine();let n;if(this.morphTargetManager&&this.morphTargetManager.isUsingTextureForTargets&&this.morphTargetManager._bind(t),this._unIndexed)n=null;else switch(s){case I.F.PointFillMode:n=null;break;case I.F.WireFrameFillMode:n=e._getLinesIndexBuffer(this.getIndices(),i);break;default:case I.F.TriangleFillMode:n=this._geometry.getIndexBuffer()}return!this._userInstancedBuffersStorage||this.hasThinInstances?this._geometry._bind(t,n):this._geometry._bind(t,n,this._userInstancedBuffersStorage.vertexBuffers,this._userInstancedBuffersStorage.vertexArrayObjects),this}_draw(e,t,s){if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;this._internalMeshDataInfo._onBeforeDrawObservable&&this._internalMeshDataInfo._onBeforeDrawObservable.notifyObservers(this);const i=this.getScene().getEngine();return this._unIndexed||t==I.F.PointFillMode?i.drawArraysType(t,e.verticesStart,e.verticesCount,this.forcedInstanceCount||s):t==I.F.WireFrameFillMode?i.drawElementsType(t,0,e._linesIndexCount,this.forcedInstanceCount||s):i.drawElementsType(t,e.indexStart,e.indexCount,this.forcedInstanceCount||s),this}registerBeforeRender(e){return this.onBeforeRenderObservable.add(e),this}unregisterBeforeRender(e){return this.onBeforeRenderObservable.removeCallback(e),this}registerAfterRender(e){return this.onAfterRenderObservable.add(e),this}unregisterAfterRender(e){return this.onAfterRenderObservable.removeCallback(e),this}_getInstancesRenderList(e,t=!1){if(this._instanceDataStorage.isFrozen){if(t)return this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.hardwareInstancedRendering[e]=!1,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode.renderSelf[e]=!0,this._instanceDataStorage.batchCacheReplacementModeInFrozenMode;if(this._instanceDataStorage.previousBatch)return this._instanceDataStorage.previousBatch}const s=this.getScene(),i=s._isInIntermediateRendering(),n=i?this._internalAbstractMeshDataInfo._onlyForInstancesIntermediate:this._internalAbstractMeshDataInfo._onlyForInstances,r=this._instanceDataStorage.batchCache;if(r.mustReturn=!1,r.renderSelf[e]=t||!n&&this.isEnabled()&&this.isVisible,r.visibleInstances[e]=null,this._instanceDataStorage.visibleInstances&&!t){const t=this._instanceDataStorage.visibleInstances,n=s.getRenderId(),a=i?t.intermediateDefaultRenderId:t.defaultRenderId;r.visibleInstances[e]=t[n],!r.visibleInstances[e]&&a&&(r.visibleInstances[e]=t[a])}return r.hardwareInstancedRendering[e]=!t&&this._instanceDataStorage.hardwareInstancedRendering&&null!==r.visibleInstances[e]&&void 0!==r.visibleInstances[e],this._instanceDataStorage.previousBatch=r,r}_renderWithInstances(e,t,s,i,n){const r=s.visibleInstances[e._id];if(!r)return this;const a=this._instanceDataStorage,o=a.instancesBufferSize;let h=a.instancesBuffer,c=a.instancesPreviousBuffer;const d=16*(r.length+1)*4;for(;a.instancesBufferSize<d;)a.instancesBufferSize*=2;a.instancesData&&o==a.instancesBufferSize||(a.instancesData=new Float32Array(a.instancesBufferSize/4)),(this._scene.needsPreviousWorldMatrices&&!a.instancesPreviousData||o!=a.instancesBufferSize)&&(a.instancesPreviousData=new Float32Array(a.instancesBufferSize/4));let f=0,g=0;const _=s.renderSelf[e._id],m=!h||o!==a.instancesBufferSize||this._scene.needsPreviousWorldMatrices&&!a.instancesPreviousBuffer;if(this._instanceDataStorage.manualUpdate||a.isFrozen&&!m)g=(_?1:0)+r.length;else{const t=this.getWorldMatrix();if(_&&(this._scene.needsPreviousWorldMatrices&&(a.masterMeshPreviousWorldMatrix?(a.masterMeshPreviousWorldMatrix.copyToArray(a.instancesPreviousData,f),a.masterMeshPreviousWorldMatrix.copyFrom(t)):(a.masterMeshPreviousWorldMatrix=t.clone(),a.masterMeshPreviousWorldMatrix.copyToArray(a.instancesPreviousData,f))),t.copyToArray(a.instancesData,f),f+=16,g++),r){if(O.INSTANCEDMESH_SORT_TRANSPARENT&&this._scene.activeCamera&&e.getMaterial()?.needAlphaBlendingForMesh(e.getRenderingMesh())){const e=this._scene.activeCamera.globalPosition;for(let t=0;t<r.length;t++){const s=r[t];s._distanceToCamera=l.P.Distance(s.getBoundingInfo().boundingSphere.centerWorld,e)}r.sort(((e,t)=>e._distanceToCamera>t._distanceToCamera?-1:e._distanceToCamera<t._distanceToCamera?1:0))}for(let e=0;e<r.length;e++){const t=r[e],s=t.getWorldMatrix();s.copyToArray(a.instancesData,f),this._scene.needsPreviousWorldMatrices&&(t._previousWorldMatrix?(t._previousWorldMatrix.copyToArray(a.instancesPreviousData,f),t._previousWorldMatrix.copyFrom(s)):(t._previousWorldMatrix=s.clone(),t._previousWorldMatrix.copyToArray(a.instancesPreviousData,f))),f+=16,g++}}}return m?(h&&h.dispose(),c&&c.dispose(),h=new u.l(n,a.instancesData,!0,16,!1,!0),a.instancesBuffer=h,this._userInstancedBuffersStorage||(this._userInstancedBuffersStorage={data:{},vertexBuffers:{},strides:{},sizes:{},vertexArrayObjects:this.getEngine().getCaps().vertexArrayObject?{}:void 0}),this._userInstancedBuffersStorage.vertexBuffers.world0=h.createVertexBuffer("world0",0,4),this._userInstancedBuffersStorage.vertexBuffers.world1=h.createVertexBuffer("world1",4,4),this._userInstancedBuffersStorage.vertexBuffers.world2=h.createVertexBuffer("world2",8,4),this._userInstancedBuffersStorage.vertexBuffers.world3=h.createVertexBuffer("world3",12,4),this._scene.needsPreviousWorldMatrices&&(c=new u.l(n,a.instancesPreviousData,!0,16,!1,!0),a.instancesPreviousBuffer=c,this._userInstancedBuffersStorage.vertexBuffers.previousWorld0=c.createVertexBuffer("previousWorld0",0,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld1=c.createVertexBuffer("previousWorld1",4,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld2=c.createVertexBuffer("previousWorld2",8,4),this._userInstancedBuffersStorage.vertexBuffers.previousWorld3=c.createVertexBuffer("previousWorld3",12,4)),this._invalidateInstanceVertexArrayObject()):this._instanceDataStorage.isFrozen||(h.updateDirectly(a.instancesData,0,g),!this._scene.needsPreviousWorldMatrices||this._instanceDataStorage.manualUpdate&&!this._instanceDataStorage.previousManualUpdate||c.updateDirectly(a.instancesPreviousData,0,g)),this._processInstancedBuffers(r,_),this.getScene()._activeIndices.addCount(e.indexCount*g,!1),n._currentDrawContext&&(n._currentDrawContext.useInstancing=!0),this._bind(e,i,t),this._draw(e,t,g),!this._scene.needsPreviousWorldMatrices||m||!this._instanceDataStorage.manualUpdate||this._instanceDataStorage.isFrozen||this._instanceDataStorage.previousManualUpdate||c.updateDirectly(a.instancesData,0,g),n.unbindInstanceAttributes(),this}_renderWithThinInstances(e,t,s,i){const n=this._thinInstanceDataStorage?.instancesCount??0;this.getScene()._activeIndices.addCount(e.indexCount*n,!1),i._currentDrawContext&&(i._currentDrawContext.useInstancing=!0),this._bind(e,s,t),this._draw(e,t,n),this._scene.needsPreviousWorldMatrices&&!this._thinInstanceDataStorage.previousMatrixData&&this._thinInstanceDataStorage.matrixData&&(this._thinInstanceDataStorage.previousMatrixBuffer?this._thinInstanceDataStorage.previousMatrixBuffer.updateDirectly(this._thinInstanceDataStorage.matrixData,0,n):this._thinInstanceDataStorage.previousMatrixBuffer=this._thinInstanceCreateMatrixBuffer("previousWorld",this._thinInstanceDataStorage.matrixData,!1)),i.unbindInstanceAttributes()}_processInstancedBuffers(e,t){}_processRendering(e,t,s,i,n,r,a,o){const h=this.getScene(),l=h.getEngine();if(r&&t.getRenderingMesh().hasThinInstances)return this._renderWithThinInstances(t,i,s,l),this;if(r)this._renderWithInstances(t,i,n,s,l);else{l._currentDrawContext&&(l._currentDrawContext.useInstancing=!1);let s=0;n.renderSelf[t._id]&&(a&&a(!1,e.getWorldMatrix(),o),s++,this._draw(t,i,this._instanceDataStorage.overridenInstanceCount));const r=n.visibleInstances[t._id];if(r){const e=r.length;s+=e;for(let s=0;s<e;s++){const e=r[s].getWorldMatrix();a&&a(!0,e,o),this._draw(t,i)}}h._activeIndices.addCount(t.indexCount*s,!1)}return this}_rebuild(e=!1){if(this._instanceDataStorage.instancesBuffer&&(e&&this._instanceDataStorage.instancesBuffer.dispose(),this._instanceDataStorage.instancesBuffer=null),this._userInstancedBuffersStorage){for(const t in this._userInstancedBuffersStorage.vertexBuffers){const s=this._userInstancedBuffersStorage.vertexBuffers[t];s&&(e&&s.dispose(),this._userInstancedBuffersStorage.vertexBuffers[t]=null)}this._userInstancedBuffersStorage.vertexArrayObjects&&(this._userInstancedBuffersStorage.vertexArrayObjects={})}this._internalMeshDataInfo._effectiveMaterial=null,super._rebuild(e)}_freeze(){if(this.subMeshes){for(let e=0;e<this.subMeshes.length;e++)this._getInstancesRenderList(e);this._internalMeshDataInfo._effectiveMaterial=null,this._instanceDataStorage.isFrozen=!0}}_unFreeze(){this._instanceDataStorage.isFrozen=!1,this._instanceDataStorage.previousBatch=null}render(e,t,s){const i=this.getScene();if(this._internalAbstractMeshDataInfo._isActiveIntermediate?this._internalAbstractMeshDataInfo._isActiveIntermediate=!1:this._internalAbstractMeshDataInfo._isActive=!1,this._checkOcclusionQuery()&&!this._occlusionDataStorage.forceRenderingWhenOccluded)return this;const n=this._getInstancesRenderList(e._id,!!s);if(n.mustReturn)return this;if(!this._geometry||!this._geometry.getVertexBuffers()||!this._unIndexed&&!this._geometry.getIndexBuffer())return this;const r=i.getEngine();let a=0,o=null;this.ignoreCameraMaxZ&&i.activeCamera&&!i._isInIntermediateRendering()&&(a=i.activeCamera.maxZ,o=i.activeCamera,i.activeCamera.maxZ=0,i.updateTransformMatrix(!0)),this._internalMeshDataInfo._onBeforeRenderObservable&&this._internalMeshDataInfo._onBeforeRenderObservable.notifyObservers(this);const l=n.hardwareInstancedRendering[e._id]||e.getRenderingMesh().hasThinInstances,c=this._instanceDataStorage,d=e.getMaterial();if(!d)return o&&(o.maxZ=a,i.updateTransformMatrix(!0)),this;if(c.isFrozen&&this._internalMeshDataInfo._effectiveMaterial&&this._internalMeshDataInfo._effectiveMaterial===d){if(d._storeEffectOnSubMeshes&&!e.effect?._wasPreviouslyReady||!d._storeEffectOnSubMeshes&&!d.getEffect()?._wasPreviouslyReady)return o&&(o.maxZ=a,i.updateTransformMatrix(!0)),this}else{if(d._storeEffectOnSubMeshes){if(!d.isReadyForSubMesh(this,e,l))return o&&(o.maxZ=a,i.updateTransformMatrix(!0)),this}else if(!d.isReady(this,l))return o&&(o.maxZ=a,i.updateTransformMatrix(!0)),this;this._internalMeshDataInfo._effectiveMaterial=d}let u;t&&r.setAlphaMode(this._internalMeshDataInfo._effectiveMaterial.alphaMode),u=this._internalMeshDataInfo._effectiveMaterial._storeEffectOnSubMeshes?e._drawWrapper:this._internalMeshDataInfo._effectiveMaterial._getDrawWrapper();const f=u?.effect??null;for(const h of i._beforeRenderingMeshStage)h.action(this,e,n,f);if(!u||!f)return o&&(o.maxZ=a,i.updateTransformMatrix(!0)),this;const g=s||this;let _;if(c.isFrozen||!this._internalMeshDataInfo._effectiveMaterial.backFaceCulling&&null===this.overrideMaterialSideOrientation)_=c.sideOrientation;else{const e=g._getWorldMatrixDeterminant();_=this.overrideMaterialSideOrientation,null==_&&(_=this._internalMeshDataInfo._effectiveMaterial.sideOrientation),e<0&&(_=_===I.F.ClockWiseSideOrientation?I.F.CounterClockWiseSideOrientation:I.F.ClockWiseSideOrientation),c.sideOrientation=_}const m=this._internalMeshDataInfo._effectiveMaterial._preBind(u,_);this._internalMeshDataInfo._effectiveMaterial.forceDepthWrite&&r.setDepthWrite(!0);const M=i.forcePointsCloud?I.F.PointFillMode:i.forceWireframe?I.F.WireFrameFillMode:this._internalMeshDataInfo._effectiveMaterial.fillMode;this._internalMeshDataInfo._onBeforeBindObservable&&this._internalMeshDataInfo._onBeforeBindObservable.notifyObservers(this),l||this._bind(e,f,M);const p=this._internalMeshDataInfo._effectiveMaterial,y=g.getWorldMatrix();p._storeEffectOnSubMeshes?p.bindForSubMesh(y,this,e):p.bind(y,this),!p.backFaceCulling&&p.separateCullingPass&&(r.setState(!0,p.zOffset,!1,!m,p.cullBackFaces,p.stencil,p.zOffsetUnits),this._processRendering(this,e,f,M,n,l,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),r.setState(!0,p.zOffset,!1,m,p.cullBackFaces,p.stencil,p.zOffsetUnits),this._internalMeshDataInfo._onBetweenPassObservable&&this._internalMeshDataInfo._onBetweenPassObservable.notifyObservers(e)),this._processRendering(this,e,f,M,n,l,this._onBeforeDraw,this._internalMeshDataInfo._effectiveMaterial),this._internalMeshDataInfo._effectiveMaterial.unbind();for(const h of i._afterRenderingMeshStage)h.action(this,e,n,f);return this._internalMeshDataInfo._onAfterRenderObservable&&this._internalMeshDataInfo._onAfterRenderObservable.notifyObservers(this),o&&(o.maxZ=a,i.updateTransformMatrix(!0)),i.performancePriority!==h.a.Aggressive||c.isFrozen||this._freeze(),this}cleanMatrixWeights(){this.isVerticesDataPresent(u.o.MatricesWeightsKind)&&(this.isVerticesDataPresent(u.o.MatricesWeightsExtraKind)?this._normalizeSkinWeightsAndExtra():this._normalizeSkinFourWeights())}_normalizeSkinFourWeights(){const e=this.getVerticesData(u.o.MatricesWeightsKind),t=e.length;for(let s=0;s<t;s+=4){const t=e[s]+e[s+1]+e[s+2]+e[s+3];if(0===t)e[s]=1;else{const i=1/t;e[s]*=i,e[s+1]*=i,e[s+2]*=i,e[s+3]*=i}}this.setVerticesData(u.o.MatricesWeightsKind,e)}_normalizeSkinWeightsAndExtra(){const e=this.getVerticesData(u.o.MatricesWeightsExtraKind),t=this.getVerticesData(u.o.MatricesWeightsKind),s=t.length;for(let i=0;i<s;i+=4){let s=t[i]+t[i+1]+t[i+2]+t[i+3];if(s+=e[i]+e[i+1]+e[i+2]+e[i+3],0===s)t[i]=1;else{const n=1/s;t[i]*=n,t[i+1]*=n,t[i+2]*=n,t[i+3]*=n,e[i]*=n,e[i+1]*=n,e[i+2]*=n,e[i+3]*=n}}this.setVerticesData(u.o.MatricesWeightsKind,t),this.setVerticesData(u.o.MatricesWeightsKind,e)}validateSkinning(){const e=this.getVerticesData(u.o.MatricesWeightsExtraKind),t=this.getVerticesData(u.o.MatricesWeightsKind);if(null===t||null==this.skeleton)return{skinned:!1,valid:!0,report:"not skinned"};const s=t.length;let i=0,n=0,r=0,a=0;const o=null===e?4:8,h=new Array;for(let u=0;u<=o;u++)h[u]=0;for(let u=0;u<s;u+=4){let s=t[u],l=s,c=0===l?0:1;for(let n=1;n<o;n++){const r=n<4?t[u+n]:e[u+n-4];r>s&&i++,0!==r&&c++,l+=r,s=r}if(h[c]++,c>r&&(r=c),0===l)n++;else{const s=1/l;let i=0;for(let n=0;n<o;n++)i+=n<4?Math.abs(t[u+n]-t[u+n]*s):Math.abs(e[u+n-4]-e[u+n-4]*s);i>.001&&a++}}const l=this.skeleton.bones.length,c=this.getVerticesData(u.o.MatricesIndicesKind),d=this.getVerticesData(u.o.MatricesIndicesExtraKind);let f=0;for(let u=0;u<s;u+=4)for(let e=0;e<o;e++){const t=e<4?c[u+e]:d[u+e-4];(t>=l||t<0)&&f++}return{skinned:!0,valid:0===n&&0===a&&0===f,report:"Number of Weights = "+s/4+"\nMaximum influences = "+r+"\nMissing Weights = "+n+"\nNot Sorted = "+i+"\nNot Normalized = "+a+"\nWeightCounts = ["+h+"]\nNumber of bones = "+l+"\nBad Bone Indices = "+f}}_checkDelayState(){const e=this.getScene();return this._geometry?this._geometry.load(e):4===this.delayLoadState&&(this.delayLoadState=2,this._queueLoad(e)),this}_queueLoad(e){e.addPendingData(this);const t=-1!==this.delayLoadingFile.indexOf(".babylonbinarymeshdata");return n.w1.LoadFile(this.delayLoadingFile,(t=>{t instanceof ArrayBuffer?this._delayLoadingFunction(t,this):this._delayLoadingFunction(JSON.parse(t),this),this.instances.forEach((e=>{e.refreshBoundingInfo(),e._syncSubMeshes()})),this.delayLoadState=1,e.removePendingData(this)}),(()=>{}),e.offlineProvider,t),this}isInFrustum(e){return 2!==this.delayLoadState&&(!!super.isInFrustum(e)&&(this._checkDelayState(),!0))}setMaterialById(e){const t=this.getScene().materials;let s;for(s=t.length-1;s>-1;s--)if(t[s].id===e)return this.material=t[s],this;const i=this.getScene().multiMaterials;for(s=i.length-1;s>-1;s--)if(i[s].id===e)return this.material=i[s],this;return this}getAnimatables(){const e=new Array;return this.material&&e.push(this.material),this.skeleton&&e.push(this.skeleton),e}bakeTransformIntoVertices(e){if(!this.isVerticesDataPresent(u.o.PositionKind))return this;const t=this.subMeshes.splice(0);this._resetPointsArrayCache();let s,i=this.getVerticesData(u.o.PositionKind),n=new Array;for(s=0;s<i.length;s+=3)l.P.TransformCoordinates(l.P.FromArray(i,s),e).toArray(n,s);if(this.setVerticesData(u.o.PositionKind,n,this.getVertexBuffer(u.o.PositionKind).isUpdatable()),this.isVerticesDataPresent(u.o.NormalKind)){for(i=this.getVerticesData(u.o.NormalKind),n=[],s=0;s<i.length;s+=3)l.P.TransformNormal(l.P.FromArray(i,s),e).normalize().toArray(n,s);this.setVerticesData(u.o.NormalKind,n,this.getVertexBuffer(u.o.NormalKind).isUpdatable())}return e.determinant()<0&&this.flipFaces(),this.releaseSubMeshes(),this.subMeshes=t,this}bakeCurrentTransformIntoVertices(e=!0){return this.bakeTransformIntoVertices(this.computeWorldMatrix(!0)),this.resetLocalMatrix(e),this}get _positions(){return this._internalAbstractMeshDataInfo._positions?this._internalAbstractMeshDataInfo._positions:this._geometry?this._geometry._positions:null}_resetPointsArrayCache(){return this._geometry&&this._geometry._resetPointsArrayCache(),this}_generatePointsArray(){return!!this._geometry&&this._geometry._generatePointsArray()}clone(e="",t=null,s,i=!0){return new O(e,this.getScene(),t,this,s,i)}dispose(e,t=!1){this.morphTargetManager=null,this._geometry&&this._geometry.releaseForMesh(this,!0);const s=this._internalMeshDataInfo;if(s._onBeforeDrawObservable&&s._onBeforeDrawObservable.clear(),s._onBeforeBindObservable&&s._onBeforeBindObservable.clear(),s._onBeforeRenderObservable&&s._onBeforeRenderObservable.clear(),s._onAfterRenderObservable&&s._onAfterRenderObservable.clear(),s._onBetweenPassObservable&&s._onBetweenPassObservable.clear(),this._scene.useClonedMeshMap){if(s.meshMap)for(const e in s.meshMap){const t=s.meshMap[e];t&&(t._internalMeshDataInfo._source=null,s.meshMap[e]=void 0)}s._source&&s._source._internalMeshDataInfo.meshMap&&(s._source._internalMeshDataInfo.meshMap[this.uniqueId]=void 0)}else{const e=this.getScene().meshes;for(const t of e){const e=t;e._internalMeshDataInfo&&e._internalMeshDataInfo._source&&e._internalMeshDataInfo._source===this&&(e._internalMeshDataInfo._source=null)}}s._source=null,this._disposeInstanceSpecificData(),this._disposeThinInstanceSpecificData(),this._internalMeshDataInfo._checkReadinessObserver&&this._scene.onBeforeRenderObservable.remove(this._internalMeshDataInfo._checkReadinessObserver),super.dispose(e,t)}_disposeInstanceSpecificData(){}_disposeThinInstanceSpecificData(){}_invalidateInstanceVertexArrayObject(){}applyDisplacementMap(e,t,s,i,r,a,o=!1){const h=this.getScene();return n.w1.LoadImage(e,(e=>{const n=e.width,h=e.height,l=this.getEngine().createCanvas(n,h).getContext("2d");l.drawImage(e,0,0);const c=l.getImageData(0,0,n,h).data;this.applyDisplacementMapFromBuffer(c,n,h,t,s,r,a,o),i&&i(this)}),(()=>{}),h.offlineProvider),this}applyDisplacementMapFromBuffer(e,t,s,i,n,r,a,o=!1){if(!this.isVerticesDataPresent(u.o.PositionKind)||!this.isVerticesDataPresent(u.o.NormalKind)||!this.isVerticesDataPresent(u.o.UVKind))return D.Y.Warn("Cannot call applyDisplacementMap: Given mesh is not complete. Position, Normal or UV are missing"),this;const h=this.getVerticesData(u.o.PositionKind,!0,!0),c=this.getVerticesData(u.o.NormalKind),d=this.getVerticesData(u.o.UVKind);let g=l.P.Zero();const _=l.P.Zero(),m=l.FM.Zero();r=r||l.FM.Zero(),a=a||new l.FM(1,1);for(let u=0;u<h.length;u+=3){l.P.FromArrayToRef(h,u,g),l.P.FromArrayToRef(c,u,_),l.FM.FromArrayToRef(d,u/3*2,m);const o=4*((Math.abs(m.x*a.x+r.x%1)*(t-1)%t|0)+(Math.abs(m.y*a.y+r.y%1)*(s-1)%s|0)*t),f=.3*(e[o]/255)+.59*(e[o+1]/255)+.11*(e[o+2]/255);_.normalize(),_.scaleInPlace(i+(n-i)*f),g=g.add(_),g.toArray(h,u)}return f.x.ComputeNormals(h,this.getIndices(),c),o?(this.setVerticesData(u.o.PositionKind,h),this.setVerticesData(u.o.NormalKind,c),this.setVerticesData(u.o.UVKind,d)):(this.updateVerticesData(u.o.PositionKind,h),this.updateVerticesData(u.o.NormalKind,c)),this}convertToFlatShadedMesh(){const e=this.getVerticesDataKinds(),t={},s={},i={};let n,r,a=!1;for(n=0;n<e.length;n++){r=e[n];const o=this.getVertexBuffer(r),h=o.getData();(h instanceof Array||h instanceof Float32Array)&&0===h.length||(r!==u.o.NormalKind?(t[r]=o,s[r]=this.getVerticesData(r),i[r]=[]):(a=o.isUpdatable(),e.splice(n,1),n--))}const o=this.subMeshes.slice(0),h=this.getIndices(),c=this.getTotalIndices();let d;for(d=0;d<c;d++){const a=h[d];for(n=0;n<e.length;n++){if(r=e[n],!t[r])continue;const o=t[r].getStrideSize();for(let e=0;e<o;e++)i[r].push(s[r][a*o+e])}}const f=[],g=i[u.o.PositionKind];let _;for(_=this.getScene().useRightHandedSystem?1===this.overrideMaterialSideOrientation:0===this.overrideMaterialSideOrientation,d=0;d<c;d+=3){h[d]=d,h[d+1]=d+1,h[d+2]=d+2;const e=l.P.FromArray(g,3*d),t=l.P.FromArray(g,3*(d+1)),s=l.P.FromArray(g,3*(d+2)),i=e.subtract(t),n=s.subtract(t),r=l.P.Normalize(l.P.Cross(i,n));_&&r.scaleInPlace(-1);for(let a=0;a<3;a++)f.push(r.x),f.push(r.y),f.push(r.z)}for(this.setIndices(h),this.setVerticesData(u.o.NormalKind,f,a),n=0;n<e.length;n++)r=e[n],i[r]&&this.setVerticesData(r,i[r],t[r].isUpdatable());this.releaseSubMeshes();for(let l=0;l<o.length;l++){const e=o[l];m.P.AddToMesh(e.materialIndex,e.indexStart,e.indexCount,e.indexStart,e.indexCount,this)}return this.synchronizeInstances(),this}convertToUnIndexedMesh(){const e=this.getVerticesDataKinds(),t={},s={},i={};let n,r;for(n=0;n<e.length;n++){r=e[n];const a=this.getVertexBuffer(r);t[r]=a,s[r]=t[r].getData(),i[r]=[]}const a=this.subMeshes.slice(0),o=this.getIndices(),h=this.getTotalIndices();let l;for(l=0;l<h;l++){const a=o[l];for(n=0;n<e.length;n++){r=e[n];const o=t[r].getStrideSize();for(let e=0;e<o;e++)i[r].push(s[r][a*o+e])}}for(l=0;l<h;l+=3)o[l]=l,o[l+1]=l+1,o[l+2]=l+2;for(this.setIndices(o),n=0;n<e.length;n++)r=e[n],this.setVerticesData(r,i[r],t[r].isUpdatable(),t[r].getStrideSize());this.releaseSubMeshes();for(let c=0;c<a.length;c++){const e=a[c];m.P.AddToMesh(e.materialIndex,e.indexStart,e.indexCount,e.indexStart,e.indexCount,this)}return this._unIndexed=!0,this.synchronizeInstances(),this}flipFaces(e=!1){const t=f.x.ExtractFromMesh(this);let s;if(e&&this.isVerticesDataPresent(u.o.NormalKind)&&t.normals)for(s=0;s<t.normals.length;s++)t.normals[s]*=-1;if(t.indices){let e;for(s=0;s<t.indices.length;s+=3)e=t.indices[s+1],t.indices[s+1]=t.indices[s+2],t.indices[s+2]=e}return t.applyToMesh(this,this.isVertexBufferUpdatable(u.o.PositionKind)),this}increaseVertices(e=1){const t=f.x.ExtractFromMesh(this),s=t.indices&&!Array.isArray(t.indices)&&Array.from?Array.from(t.indices):t.indices,i=t.positions&&!Array.isArray(t.positions)&&Array.from?Array.from(t.positions):t.positions,n=t.uvs&&!Array.isArray(t.uvs)&&Array.from?Array.from(t.uvs):t.uvs,r=t.normals&&!Array.isArray(t.normals)&&Array.from?Array.from(t.normals):t.normals;if(s&&i){t.indices=s,t.positions=i,n&&(t.uvs=n),r&&(t.normals=r);const a=e+1,o=new Array;for(let e=0;e<a+1;e++)o[e]=new Array;let h,c;const d=new l.P(0,0,0),f=new l.P(0,0,0),g=new l.FM(0,0),_=new Array,m=new Array,I=new Array;let M,p,y,D=i.length;n&&(p=n.length),r&&(y=r.length);for(let e=0;e<s.length;e+=3){m[0]=s[e],m[1]=s[e+1],m[2]=s[e+2];for(let e=0;e<3;e++)if(h=m[e],c=m[(e+1)%3],void 0===I[h]&&void 0===I[c]?(I[h]=new Array,I[c]=new Array):(void 0===I[h]&&(I[h]=new Array),void 0===I[c]&&(I[c]=new Array)),void 0===I[h][c]&&void 0===I[c][h]){I[h][c]=[],d.x=(i[3*c]-i[3*h])/a,d.y=(i[3*c+1]-i[3*h+1])/a,d.z=(i[3*c+2]-i[3*h+2])/a,r&&(f.x=(r[3*c]-r[3*h])/a,f.y=(r[3*c+1]-r[3*h+1])/a,f.z=(r[3*c+2]-r[3*h+2])/a),n&&(g.x=(n[2*c]-n[2*h])/a,g.y=(n[2*c+1]-n[2*h+1])/a),I[h][c].push(h);for(let e=1;e<a;e++)I[h][c].push(i.length/3),i[D++]=i[3*h]+e*d.x,i[D++]=i[3*h+1]+e*d.y,i[D++]=i[3*h+2]+e*d.z,r&&(r[y++]=r[3*h]+e*f.x,r[y++]=r[3*h+1]+e*f.y,r[y++]=r[3*h+2]+e*f.z),n&&(n[p++]=n[2*h]+e*g.x,n[p++]=n[2*h+1]+e*g.y);I[h][c].push(c),I[c][h]=new Array,M=I[h][c].length;for(let e=0;e<M;e++)I[c][h][e]=I[h][c][M-1-e]}o[0][0]=s[e],o[1][0]=I[s[e]][s[e+1]][1],o[1][1]=I[s[e]][s[e+2]][1];for(let t=2;t<a;t++){o[t][0]=I[s[e]][s[e+1]][t],o[t][t]=I[s[e]][s[e+2]][t],d.x=(i[3*o[t][t]]-i[3*o[t][0]])/t,d.y=(i[3*o[t][t]+1]-i[3*o[t][0]+1])/t,d.z=(i[3*o[t][t]+2]-i[3*o[t][0]+2])/t,r&&(f.x=(r[3*o[t][t]]-r[3*o[t][0]])/t,f.y=(r[3*o[t][t]+1]-r[3*o[t][0]+1])/t,f.z=(r[3*o[t][t]+2]-r[3*o[t][0]+2])/t),n&&(g.x=(n[2*o[t][t]]-n[2*o[t][0]])/t,g.y=(n[2*o[t][t]+1]-n[2*o[t][0]+1])/t);for(let e=1;e<t;e++)o[t][e]=i.length/3,i[D++]=i[3*o[t][0]]+e*d.x,i[D++]=i[3*o[t][0]+1]+e*d.y,i[D++]=i[3*o[t][0]+2]+e*d.z,r&&(r[y++]=r[3*o[t][0]]+e*f.x,r[y++]=r[3*o[t][0]+1]+e*f.y,r[y++]=r[3*o[t][0]+2]+e*f.z),n&&(n[p++]=n[2*o[t][0]]+e*g.x,n[p++]=n[2*o[t][0]+1]+e*g.y)}o[a]=I[s[e+1]][s[e+2]],_.push(o[0][0],o[1][0],o[1][1]);for(let e=1;e<a;e++){let t;for(t=0;t<e;t++)_.push(o[e][t],o[e+1][t],o[e+1][t+1]),_.push(o[e][t],o[e+1][t+1],o[e][t+1]);_.push(o[e][t],o[e+1][t],o[e+1][t+1])}}t.indices=_,t.applyToMesh(this,this.isVertexBufferUpdatable(u.o.PositionKind))}else D.Y.Warn("Couldn't increase number of vertices : VertexData must contain at least indices and positions")}forceSharedVertices(){const e=f.x.ExtractFromMesh(this),t=e.uvs,s=e.indices,i=e.positions,n=e.colors;if(void 0===s||void 0===i||null===s||null===i)D.Y.Warn("VertexData contains empty entries");else{const r=new Array,a=new Array,o=new Array,h=new Array;let l=new Array,c=0;const d={};let g,_;for(let e=0;e<s.length;e+=3){_=[s[e],s[e+1],s[e+2]],l=new Array;for(let e=0;e<3;e++){l[e]="";for(let t=0;t<3;t++)Math.abs(i[3*_[e]+t])<1e-8&&(i[3*_[e]+t]=0),l[e]+=i[3*_[e]+t]+"|"}if(l[0]!=l[1]&&l[0]!=l[2]&&l[1]!=l[2])for(let e=0;e<3;e++){if(g=d[l[e]],void 0===g){d[l[e]]=c,g=c++;for(let t=0;t<3;t++)r.push(i[3*_[e]+t]);if(null!==n&&void 0!==n)for(let t=0;t<4;t++)h.push(n[4*_[e]+t]);if(null!==t&&void 0!==t)for(let s=0;s<2;s++)o.push(t[2*_[e]+s])}a.push(g)}}const m=new Array;f.x.ComputeNormals(r,a,m),e.positions=r,e.indices=a,e.normals=m,null!==t&&void 0!==t&&(e.uvs=o),null!==n&&void 0!==n&&(e.colors=h),e.applyToMesh(this,this.isVertexBufferUpdatable(u.o.PositionKind))}}static _instancedMeshFactory(e,t){throw(0,b.S)("InstancedMesh")}static _PhysicsImpostorParser(e,t,s){throw(0,b.S)("PhysicsImpostor")}createInstance(e){return O._instancedMeshFactory(e,this)}synchronizeInstances(){for(let e=0;e<this.instances.length;e++){this.instances[e]._syncSubMeshes()}return this}optimizeIndices(e){const t=this.getIndices(),s=this.getVerticesData(u.o.PositionKind);if(!s||!t)return this;const i=new Array;for(let n=0;n<s.length;n+=3)i.push(l.P.FromArray(s,n));const r=new Array;return n.$g.SyncAsyncForLoop(i.length,40,(e=>{const t=i.length-1-e,s=i[t];for(let n=0;n<t;++n){const e=i[n];if(s.equals(e)){r[t]=n;break}}}),(()=>{for(let e=0;e<t.length;++e)t[e]=r[t[e]]||t[e];const s=this.subMeshes.slice(0);this.setIndices(t),this.subMeshes=s,e&&e(this)})),this}serialize(e){e.name=this.name,e.id=this.id,e.uniqueId=this.uniqueId,e.type=this.getClassName(),a.$&&a.$.HasTags(this)&&(e.tags=a.$.GetTags(this)),e.position=this.position.asArray(),this.rotationQuaternion?e.rotationQuaternion=this.rotationQuaternion.asArray():this.rotation&&(e.rotation=this.rotation.asArray()),e.scaling=this.scaling.asArray(),this._postMultiplyPivotMatrix?e.pivotMatrix=this.getPivotMatrix().asArray():e.localMatrix=this.getPivotMatrix().asArray(),e.isEnabled=this.isEnabled(!1),e.isVisible=this.isVisible,e.infiniteDistance=this.infiniteDistance,e.pickable=this.isPickable,e.receiveShadows=this.receiveShadows,e.billboardMode=this.billboardMode,e.visibility=this.visibility,e.checkCollisions=this.checkCollisions,e.isBlocker=this.isBlocker,e.overrideMaterialSideOrientation=this.overrideMaterialSideOrientation,this.parent&&this.parent._serializeAsParent(e),e.isUnIndexed=this.isUnIndexed;const t=this._geometry;if(t&&this.subMeshes){e.geometryUniqueId=t.uniqueId,e.geometryId=t.id,e.subMeshes=[];for(let t=0;t<this.subMeshes.length;t++){const s=this.subMeshes[t];e.subMeshes.push({materialIndex:s.materialIndex,verticesStart:s.verticesStart,verticesCount:s.verticesCount,indexStart:s.indexStart,indexCount:s.indexCount})}}if(this.material?this.material.doNotSerialize||(e.materialUniqueId=this.material.uniqueId,e.materialId=this.material.id):(this.material=null,e.materialUniqueId=this._scene.defaultMaterial.uniqueId,e.materialId=this._scene.defaultMaterial.id),this.morphTargetManager&&(e.morphTargetManagerId=this.morphTargetManager.uniqueId),this.skeleton&&(e.skeletonId=this.skeleton.id,e.numBoneInfluencers=this.numBoneInfluencers),this.getScene()._getComponent(S.l.NAME_PHYSICSENGINE)){const t=this.getPhysicsImpostor();t&&(e.physicsMass=t.getParam("mass"),e.physicsFriction=t.getParam("friction"),e.physicsRestitution=t.getParam("mass"),e.physicsImpostor=t.type)}this.metadata&&(e.metadata=this.metadata),e.instances=[];for(let s=0;s<this.instances.length;s++){const t=this.instances[s];if(t.doNotSerialize)continue;const i={name:t.name,id:t.id,isEnabled:t.isEnabled(!1),isVisible:t.isVisible,isPickable:t.isPickable,checkCollisions:t.checkCollisions,position:t.position.asArray(),scaling:t.scaling.asArray()};if(t.parent&&t.parent._serializeAsParent(i),t.rotationQuaternion?i.rotationQuaternion=t.rotationQuaternion.asArray():t.rotation&&(i.rotation=t.rotation.asArray()),this.getScene()._getComponent(S.l.NAME_PHYSICSENGINE)){const e=t.getPhysicsImpostor();e&&(i.physicsMass=e.getParam("mass"),i.physicsFriction=e.getParam("friction"),i.physicsRestitution=e.getParam("mass"),i.physicsImpostor=e.type)}t.metadata&&(i.metadata=t.metadata),e.instances.push(i),y.p4.AppendSerializedAnimations(t,i),i.ranges=t.serializeAnimationRanges()}if(this._thinInstanceDataStorage.instancesCount&&this._thinInstanceDataStorage.matrixData&&(e.thinInstances={instancesCount:this._thinInstanceDataStorage.instancesCount,matrixData:Array.from(this._thinInstanceDataStorage.matrixData),matrixBufferSize:this._thinInstanceDataStorage.matrixBufferSize,enablePicking:this.thinInstanceEnablePicking},this._userThinInstanceBuffersStorage)){const t={data:{},sizes:{},strides:{}};for(const e in this._userThinInstanceBuffersStorage.data)t.data[e]=Array.from(this._userThinInstanceBuffersStorage.data[e]),t.sizes[e]=this._userThinInstanceBuffersStorage.sizes[e],t.strides[e]=this._userThinInstanceBuffersStorage.strides[e];e.thinInstances.userThinInstance=t}y.p4.AppendSerializedAnimations(this,e),e.ranges=this.serializeAnimationRanges(),e.layerMask=this.layerMask,e.alphaIndex=this.alphaIndex,e.hasVertexAlpha=this.hasVertexAlpha,e.overlayAlpha=this.overlayAlpha,e.overlayColor=this.overlayColor.asArray(),e.renderOverlay=this.renderOverlay,e.applyFog=this.applyFog,this.actionManager&&(e.actions=this.actionManager.serialize(this.name))}_syncGeometryWithMorphTargetManager(){if(!this.geometry)return;this._markSubMeshesAsAttributesDirty();const e=this._internalAbstractMeshDataInfo._morphTargetManager;if(e&&e.vertexCount){if(e.vertexCount!==this.getTotalVertices())return D.Y.Error("Mesh is incompatible with morph targets. Targets and mesh must all have the same vertices count."),void(this.morphTargetManager=null);if(e.isUsingTextureForTargets)return;for(let t=0;t<e.numInfluencers;t++){const s=e.getActiveTarget(t),i=s.getPositions();if(!i)return void D.Y.Error("Invalid morph target. Target must have positions.");this.geometry.setVerticesData(u.o.PositionKind+t,i,!1,3);const n=s.getNormals();n&&this.geometry.setVerticesData(u.o.NormalKind+t,n,!1,3);const r=s.getTangents();r&&this.geometry.setVerticesData(u.o.TangentKind+t,r,!1,3);const a=s.getUVs();a&&this.geometry.setVerticesData(u.o.UVKind+"_"+t,a,!1,2)}}else{let e=0;for(;this.geometry.isVerticesDataPresent(u.o.PositionKind+e);)this.geometry.removeVerticesData(u.o.PositionKind+e),this.geometry.isVerticesDataPresent(u.o.NormalKind+e)&&this.geometry.removeVerticesData(u.o.NormalKind+e),this.geometry.isVerticesDataPresent(u.o.TangentKind+e)&&this.geometry.removeVerticesData(u.o.TangentKind+e),this.geometry.isVerticesDataPresent(u.o.UVKind+e)&&this.geometry.removeVerticesData(u.o.UVKind+"_"+e),e++}}static Parse(e,t,s){let i;if(i=e.type&&"LinesMesh"===e.type?O._LinesMeshParser(e,t):e.type&&"GroundMesh"===e.type?O._GroundMeshParser(e,t):e.type&&"GoldbergMesh"===e.type?O._GoldbergMeshParser(e,t):new O(e.name,t),i.id=e.id,i._waitingParsedUniqueId=e.uniqueId,a.$&&a.$.AddTagsTo(i,e.tags),i.position=l.P.FromArray(e.position),void 0!==e.metadata&&(i.metadata=e.metadata),e.rotationQuaternion?i.rotationQuaternion=l._f.FromArray(e.rotationQuaternion):e.rotation&&(i.rotation=l.P.FromArray(e.rotation)),i.scaling=l.P.FromArray(e.scaling),e.localMatrix?i.setPreTransformMatrix(l.y3.FromArray(e.localMatrix)):e.pivotMatrix&&i.setPivotMatrix(l.y3.FromArray(e.pivotMatrix)),i.setEnabled(e.isEnabled),i.isVisible=e.isVisible,i.infiniteDistance=e.infiniteDistance,i.showBoundingBox=e.showBoundingBox,i.showSubMeshesBoundingBox=e.showSubMeshesBoundingBox,void 0!==e.applyFog&&(i.applyFog=e.applyFog),void 0!==e.pickable&&(i.isPickable=e.pickable),void 0!==e.alphaIndex&&(i.alphaIndex=e.alphaIndex),i.receiveShadows=e.receiveShadows,i.billboardMode=e.billboardMode,void 0!==e.visibility&&(i.visibility=e.visibility),i.checkCollisions=e.checkCollisions,i.overrideMaterialSideOrientation=e.overrideMaterialSideOrientation,void 0!==e.isBlocker&&(i.isBlocker=e.isBlocker),i._shouldGenerateFlatShading=e.useFlatShading,e.freezeWorldMatrix&&(i._waitingData.freezeWorldMatrix=e.freezeWorldMatrix),void 0!==e.parentId&&(i._waitingParentId=e.parentId),void 0!==e.parentInstanceIndex&&(i._waitingParentInstanceIndex=e.parentInstanceIndex),void 0!==e.actions&&(i._waitingData.actions=e.actions),void 0!==e.overlayAlpha&&(i.overlayAlpha=e.overlayAlpha),void 0!==e.overlayColor&&(i.overlayColor=c.Wo.FromArray(e.overlayColor)),void 0!==e.renderOverlay&&(i.renderOverlay=e.renderOverlay),i.isUnIndexed=!!e.isUnIndexed,i.hasVertexAlpha=e.hasVertexAlpha,e.delayLoadingFile?(i.delayLoadState=4,i.delayLoadingFile=s+e.delayLoadingFile,i.buildBoundingInfo(l.P.FromArray(e.boundingBoxMinimum),l.P.FromArray(e.boundingBoxMaximum)),e._binaryInfo&&(i._binaryInfo=e._binaryInfo),i._delayInfo=[],e.hasUVs&&i._delayInfo.push(u.o.UVKind),e.hasUVs2&&i._delayInfo.push(u.o.UV2Kind),e.hasUVs3&&i._delayInfo.push(u.o.UV3Kind),e.hasUVs4&&i._delayInfo.push(u.o.UV4Kind),e.hasUVs5&&i._delayInfo.push(u.o.UV5Kind),e.hasUVs6&&i._delayInfo.push(u.o.UV6Kind),e.hasColors&&i._delayInfo.push(u.o.ColorKind),e.hasMatricesIndices&&i._delayInfo.push(u.o.MatricesIndicesKind),e.hasMatricesWeights&&i._delayInfo.push(u.o.MatricesWeightsKind),i._delayLoadingFunction=g.Z._ImportGeometry,p.Z.ForceFullSceneLoadingForIncremental&&i._checkDelayState()):g.Z._ImportGeometry(e,i),e.materialUniqueId?i._waitingMaterialId=e.materialUniqueId:e.materialId&&(i._waitingMaterialId=e.materialId),e.morphTargetManagerId>-1&&(i.morphTargetManager=t.getMorphTargetManagerById(e.morphTargetManagerId)),void 0!==e.skeletonId&&null!==e.skeletonId&&(i.skeleton=t.getLastSkeletonById(e.skeletonId),e.numBoneInfluencers&&(i.numBoneInfluencers=e.numBoneInfluencers)),e.animations){for(let t=0;t<e.animations.length;t++){const s=e.animations[t],n=(0,v.q)("BABYLON.Animation");n&&i.animations.push(n.Parse(s))}d.N.ParseAnimationRanges(i,e,t)}if(e.autoAnimate&&t.beginAnimation(i,e.autoAnimateFrom,e.autoAnimateTo,e.autoAnimateLoop,e.autoAnimateSpeed||1),e.layerMask&&!isNaN(e.layerMask)?i.layerMask=Math.abs(parseInt(e.layerMask)):i.layerMask=268435455,e.physicsImpostor&&O._PhysicsImpostorParser(t,i,e),e.lodMeshIds&&(i._waitingData.lods={ids:e.lodMeshIds,distances:e.lodDistances?e.lodDistances:null,coverages:e.lodCoverages?e.lodCoverages:null}),e.instances)for(let n=0;n<e.instances.length;n++){const s=e.instances[n],r=i.createInstance(s.name);if(s.id&&(r.id=s.id),a.$&&(s.tags?a.$.AddTagsTo(r,s.tags):a.$.AddTagsTo(r,e.tags)),r.position=l.P.FromArray(s.position),void 0!==s.metadata&&(r.metadata=s.metadata),void 0!==s.parentId&&(r._waitingParentId=s.parentId),void 0!==s.parentInstanceIndex&&(r._waitingParentInstanceIndex=s.parentInstanceIndex),void 0!==s.isEnabled&&null!==s.isEnabled&&r.setEnabled(s.isEnabled),void 0!==s.isVisible&&null!==s.isVisible&&(r.isVisible=s.isVisible),void 0!==s.isPickable&&null!==s.isPickable&&(r.isPickable=s.isPickable),s.rotationQuaternion?r.rotationQuaternion=l._f.FromArray(s.rotationQuaternion):s.rotation&&(r.rotation=l.P.FromArray(s.rotation)),r.scaling=l.P.FromArray(s.scaling),void 0!=s.checkCollisions&&null!=s.checkCollisions&&(r.checkCollisions=s.checkCollisions),void 0!=s.pickable&&null!=s.pickable&&(r.isPickable=s.pickable),void 0!=s.showBoundingBox&&null!=s.showBoundingBox&&(r.showBoundingBox=s.showBoundingBox),void 0!=s.showSubMeshesBoundingBox&&null!=s.showSubMeshesBoundingBox&&(r.showSubMeshesBoundingBox=s.showSubMeshesBoundingBox),void 0!=s.alphaIndex&&null!=s.showSubMeshesBoundingBox&&(r.alphaIndex=s.alphaIndex),s.physicsImpostor&&O._PhysicsImpostorParser(t,r,s),s.animations){for(let e=0;e<s.animations.length;e++){const t=s.animations[e],i=(0,v.q)("BABYLON.Animation");i&&r.animations.push(i.Parse(t))}d.N.ParseAnimationRanges(r,s,t),s.autoAnimate&&t.beginAnimation(r,s.autoAnimateFrom,s.autoAnimateTo,s.autoAnimateLoop,s.autoAnimateSpeed||1)}}if(e.thinInstances){const t=e.thinInstances;if(i.thinInstanceEnablePicking=!!t.enablePicking,t.matrixData?(i.thinInstanceSetBuffer("matrix",new Float32Array(t.matrixData),16,!1),i._thinInstanceDataStorage.matrixBufferSize=t.matrixBufferSize,i._thinInstanceDataStorage.instancesCount=t.instancesCount):i._thinInstanceDataStorage.matrixBufferSize=t.matrixBufferSize,e.thinInstances.userThinInstance){const t=e.thinInstances.userThinInstance;for(const e in t.data)i.thinInstanceSetBuffer(e,new Float32Array(t.data[e]),t.strides[e],!1),i._userThinInstanceBuffersStorage.sizes[e]=t.sizes[e]}}return i}setPositionsForCPUSkinning(){const e=this._internalMeshDataInfo;if(!e._sourcePositions){const t=this.getVerticesData(u.o.PositionKind);if(!t)return e._sourcePositions;e._sourcePositions=new Float32Array(t),this.isVertexBufferUpdatable(u.o.PositionKind)||this.setVerticesData(u.o.PositionKind,t,!0)}return e._sourcePositions}setNormalsForCPUSkinning(){const e=this._internalMeshDataInfo;if(!e._sourceNormals){const t=this.getVerticesData(u.o.NormalKind);if(!t)return e._sourceNormals;e._sourceNormals=new Float32Array(t),this.isVertexBufferUpdatable(u.o.NormalKind)||this.setVerticesData(u.o.NormalKind,t,!0)}return e._sourceNormals}applySkeleton(e){if(!this.geometry)return this;if(this.geometry._softwareSkinningFrameId==this.getScene().getFrameId())return this;if(this.geometry._softwareSkinningFrameId=this.getScene().getFrameId(),!this.isVerticesDataPresent(u.o.PositionKind))return this;if(!this.isVerticesDataPresent(u.o.MatricesIndicesKind))return this;if(!this.isVerticesDataPresent(u.o.MatricesWeightsKind))return this;const t=this.isVerticesDataPresent(u.o.NormalKind),s=this._internalMeshDataInfo;if(!s._sourcePositions){const e=this.subMeshes.slice();this.setPositionsForCPUSkinning(),this.subMeshes=e}t&&!s._sourceNormals&&this.setNormalsForCPUSkinning();let i=this.getVerticesData(u.o.PositionKind);if(!i)return this;i instanceof Float32Array||(i=new Float32Array(i));let n=this.getVerticesData(u.o.NormalKind);if(t){if(!n)return this;n instanceof Float32Array||(n=new Float32Array(n))}const r=this.getVerticesData(u.o.MatricesIndicesKind),a=this.getVerticesData(u.o.MatricesWeightsKind);if(!a||!r)return this;const o=this.numBoneInfluencers>4,h=o?this.getVerticesData(u.o.MatricesIndicesExtraKind):null,c=o?this.getVerticesData(u.o.MatricesWeightsExtraKind):null,d=e.getTransformMatrices(this),f=l.P.Zero(),g=new l.y3,_=new l.y3;let m,I=0;for(let u=0;u<i.length;u+=3,I+=4){let e;for(m=0;m<4;m++)e=a[I+m],e>0&&(l.y3.FromFloat32ArrayToRefScaled(d,Math.floor(16*r[I+m]),e,_),g.addToSelf(_));if(o)for(m=0;m<4;m++)e=c[I+m],e>0&&(l.y3.FromFloat32ArrayToRefScaled(d,Math.floor(16*h[I+m]),e,_),g.addToSelf(_));l.P.TransformCoordinatesFromFloatsToRef(s._sourcePositions[u],s._sourcePositions[u+1],s._sourcePositions[u+2],g,f),f.toArray(i,u),t&&(l.P.TransformNormalFromFloatsToRef(s._sourceNormals[u],s._sourceNormals[u+1],s._sourceNormals[u+2],g,f),f.toArray(n,u)),g.reset()}return this.updateVerticesData(u.o.PositionKind,i),t&&this.updateVerticesData(u.o.NormalKind,n),this}static MinMax(e){let t=null,s=null;return e.forEach((function(e){const i=e.getBoundingInfo().boundingBox;t&&s?(t.minimizeInPlace(i.minimumWorld),s.maximizeInPlace(i.maximumWorld)):(t=i.minimumWorld,s=i.maximumWorld)})),t&&s?{min:t,max:s}:{min:l.P.Zero(),max:l.P.Zero()}}static Center(e){const t=e instanceof Array?O.MinMax(e):e;return l.P.Center(t.min,t.max)}static MergeMeshes(e,t=!0,s,i,n,r){return(0,o.s3)(O._MergeMeshesCoroutine(e,t,s,i,n,r,!1))}static MergeMeshesAsync(e,t=!0,s,i,n,r){return(0,o.sM)(O._MergeMeshesCoroutine(e,t,s,i,n,r,!0),(0,o.KO)())}static*_MergeMeshesCoroutine(e,t=!0,s,i,n,r,a){if(0===(e=e.filter(Boolean)).length)return null;let o;if(!s){let t=0;for(o=0;o<e.length;o++)if(t+=e[o].getTotalVertices(),t>=65536)return D.Y.Warn("Cannot merge meshes because resulting mesh will have more than 65536 vertices. Please use allow32BitsIndices = true to use 32 bits indices"),null}r&&(n=!1);const h=new Array,l=new Array,c=new Array,d=e[0].overrideMaterialSideOrientation;for(o=0;o<e.length;o++){const t=e[o];if(t.isAnInstance)return D.Y.Warn("Cannot merge instance meshes."),null;if(d!==t.overrideMaterialSideOrientation)return D.Y.Warn("Cannot merge meshes with different overrideMaterialSideOrientation values."),null;if(n&&c.push(t.getTotalIndices()),r)if(t.material){const e=t.material;if(e instanceof M.G){for(let t=0;t<e.subMaterials.length;t++)h.indexOf(e.subMaterials[t])<0&&h.push(e.subMaterials[t]);for(let s=0;s<t.subMeshes.length;s++)l.push(h.indexOf(e.subMaterials[t.subMeshes[s].materialIndex])),c.push(t.subMeshes[s].indexCount)}else{h.indexOf(e)<0&&h.push(e);for(let s=0;s<t.subMeshes.length;s++)l.push(h.indexOf(e)),c.push(t.subMeshes[s].indexCount)}}else for(let e=0;e<t.subMeshes.length;e++)l.push(0),c.push(t.subMeshes[e].indexCount)}const u=e[0],g=e=>{const t=e.computeWorldMatrix(!0);return[f.x.ExtractFromMesh(e,!1,!1),t]},[_,I]=g(u);a&&(yield);const p=new Array(e.length-1);for(let f=1;f<e.length;f++)p[f-1]=g(e[f]),a&&(yield);const y=_._mergeCoroutine(I,p,s,a,!t);let v=y.next();for(;!v.done;)a&&(yield),v=y.next();const b=v.value;i||(i=new O(u.name+"_merged",u.getScene()));const S=b._applyToCoroutine(i,void 0,a);let x=S.next();for(;!x.done;)a&&(yield),x=S.next();if(i.checkCollisions=u.checkCollisions,i.overrideMaterialSideOrientation=u.overrideMaterialSideOrientation,t)for(o=0;o<e.length;o++)e[o].dispose();if(n||r){i.releaseSubMeshes(),o=0;let e=0;for(;o<c.length;)m.P.CreateFromIndices(0,e,c[o],i,void 0,!1),e+=c[o],o++;for(const t of i.subMeshes)t.refreshBoundingInfo();i.computeWorldMatrix(!0)}if(r){const e=new M.G(u.name+"_merged",u.getScene());e.subMaterials=h;for(let t=0;t<i.subMeshes.length;t++)i.subMeshes[t].materialIndex=l[t];i.material=e}else i.material=u.material;return i}addInstance(e){e._indexInSourceMeshInstanceArray=this.instances.length,this.instances.push(e)}removeInstance(e){const t=e._indexInSourceMeshInstanceArray;if(-1!=t){if(t!==this.instances.length-1){const e=this.instances[this.instances.length-1];this.instances[t]=e,e._indexInSourceMeshInstanceArray=t}e._indexInSourceMeshInstanceArray=-1,this.instances.pop()}}_shouldConvertRHS(){return this.overrideMaterialSideOrientation===I.F.CounterClockWiseSideOrientation}}O.FRONTSIDE=f.x.FRONTSIDE,O.BACKSIDE=f.x.BACKSIDE,O.DOUBLESIDE=f.x.DOUBLESIDE,O.DEFAULTSIDE=f.x.DEFAULTSIDE,O.NO_CAP=0,O.CAP_START=1,O.CAP_END=2,O.CAP_ALL=3,O.NO_FLIP=0,O.FLIP_TILE=1,O.ROTATE_TILE=2,O.FLIP_ROW=3,O.ROTATE_ROW=4,O.FLIP_N_ROTATE_TILE=5,O.FLIP_N_ROTATE_ROW=6,O.CENTER=0,O.LEFT=1,O.RIGHT=2,O.TOP=3,O.BOTTOM=4,O.INSTANCEDMESH_SORT_TRANSPARENT=!1,O._GroundMeshParser=(e,t)=>{throw(0,b.S)("GroundMesh")},O._GoldbergMeshParser=(e,t)=>{throw(0,b.S)("GoldbergMesh")},O._LinesMeshParser=(e,t)=>{throw(0,b.S)("LinesMesh")},(0,v.H)("BABYLON.Mesh",O),O.prototype.setMaterialByID=function(e){return this.setMaterialById(e)},O.CreateDisc=O.CreateDisc||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateBox=O.CreateBox||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateSphere=O.CreateSphere||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateCylinder=O.CreateCylinder||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateTorusKnot=O.CreateTorusKnot||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateTorus=O.CreateTorus||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreatePlane=O.CreatePlane||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateGround=O.CreateGround||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateTiledGround=O.CreateTiledGround||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateGroundFromHeightMap=O.CreateGroundFromHeightMap||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateTube=O.CreateTube||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreatePolyhedron=O.CreatePolyhedron||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateIcoSphere=O.CreateIcoSphere||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateDecal=O.CreateDecal||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.CreateCapsule=O.CreateCapsule||(()=>{throw new Error("Import MeshBuilder to populate this function")}),O.ExtendToGoldberg=O.ExtendToGoldberg||(()=>{throw new Error("Import MeshBuilder to populate this function")})}}]);